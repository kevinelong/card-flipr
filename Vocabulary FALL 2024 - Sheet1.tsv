week	topic	name	meaning	example	notes
week 1	computers	Hardware	The physical components of a computer.	motherboard, cpu, gpu, ram, disks	
week 1	computers	Software	Instructions for computer to follow. The CPU executes these instructions.	binary machine code for the cpu	or a scripting language like javascript or python that is indirectly executed by an interpreter (browser or NodeJS in the case of javascript).
week 1	computers	firmware	Software embedded into hardware.	ROM-BIOS	Read Only Memory holding the Basic Input Output System for reading from drives or the keyboard or writing letters and numbers to the screen.
week 1	computers	OS	Operating System. The OS allows regular apps to access the hardware for IO.	MS-Windows, MacOS, Chrome OS, Linux	Manages Tasks, Organizes Disks into files and folders.
week 1	computers	Application	Software running on top of an operating system.	A word processor, a spreadsheet, or a game.	
week 1	computers	terminal	Emulates the screen and keyboard of a pre-PC era dumb-terminal or main-frame system console.	windows terminal, git-bash, vscode terminal panes.	
week 1	computers	shell	The program provided by the operating system we access with a terminal.	sh, bash, csh, xsh, powershell	
week 1	computers	file	A named file that contains plain text (ASCII/UTF8) like source code or non-text data like sounds, images or executables.	mysite/	
week 1	computers	directory	A named folder, the index to the contents of a folder, or a special folder (~ home, .. parent, . current)	mysite/	
week 1	command line	ls	List command shows files and directories in the current directory.	ls -la	Dash Options as in "ls -la" lists in the long-format, all-files.
week 1	command line	cd	The change directory (open folder) command in most shells.	cd mysite	
week 1	command line	.	The Current directory/folder.		
week 1	command line	..	The Parent directory of the current directory.		
week 1	command line	~	The Home directory/folder for the current user.		
week 1	command line	touch	Creates a file or updates the last modified timestamp on a file.	touch one.txt two.txt	
week 1	command line	mkdir directory_name	Make Directory (create a folder)	mkdir images styles scripts	creates three folders in this case
week 1	command line	echo hello	Command to print output to screen.		
week 1	command line	>	Redirect output. Creates or destroys target file anew.	echo hello > greeting.txt	create txt file with hello inside it
week 1	command line	>>	Redirect with append. Creates, or appends to the end of an existing file. Preserves the existing content.	echo world >> greeting.txt	add a second line to the file
week 1	command line	*	A wildcard matching any pattern.	ls *html	list only html files
week 1	command line	cat	Concatenate (chain to screen one letter at a time).	cat greeting.txt	Show/dump the whole file's content.
week 1	command line	mv	Move a file/folder to a different directory and/or rename a file/directory.	mv *txt text or mv about.html aboutus.html	mv all txt files to the text directory or rename file from about to aboutus.
week 1	command line	rm	Remove File	rm aboutus.html or rm -rf dir_name	deletes aboutus.html or remove recursive forced (even if empty) a whole directory including its files and inner child folders.
week 1	command line	rmdir	Remove Directory (delete a folder)	rmdir text	remove if empty
week 1	command line	cp	Copy.  Leaves the original intact (like a copy and paste).	cp index.html about.html	create new about.html based on existing index.html\
week 1	command line	pwd	Print Working Directory. Outputs the full folder path to your current directory.	pwd	
week 1	learn to code	editor	A text editor for editing plain text files (ASCII, UTF-8, UNICODE).	notepad, vi	
week 1	learn to code	IDE	Integrated Development Environment.	e.g. VSCode, PyCharm, IntelliJ	Includes a text editor and many extra tools for developing software. e.g. file system explorer, and a terminal, and source code control.
week 1	learn to code	code	Source Code edited by person to be interpreted by the computer, or the agreed on meaning of and set of numbers or symbols.	console.log("A");	Or the agreed fact that 65 means the letter "A" in ASCII (American Standard Code for Information Interchange).
week 1	learn to code	browser	The application we use to navigate the world-wide-web.	Firefox, Google Chrome, Microsoft Edge.	A client for HTTP (HyperText Transport Protocol) that fetches requested documents/pages from the domain, folder and file path entered into an address bar.
week 1	learn to code	HTML	HyperText Markup Language	<h1>Hello World</>	A standard for describing how a web page content.
week 1	learn to code	CSS	Cascading Style Sheets	body { font-family: sans-serif }	A system for applying styles to format HTML.
week 1	learn to code	JavaScript/ECMAScript	The only general purpose programming language available in the browser.	node main.js	Generally an interpreted language associated with web browsers and web technologies.
week 1	learn to code	Tag	The HTML code to create an element.	<br>	Starts with an angle bracket (less than symbol) and ends with a closing angle bracket (greater than symbol)
week 1	learn to code	Closing Tag	The HTML code to end an element that can have content.	<div>Content</div>	A closing tag mirrors an opening tag but starts with a regular slash symbol / typically found on the question mark key.
week 1	learn to code	Element	The resulting document object in memory that was created based on a tag in the source code.		
week 1	learn to code	Attribute	The extra code inside a tag the defined an Element's properties and their values.	<div id="abc">content</div>	Here abc is the attribute value and id is the attribute name
week 1	learn to code	Property	The named value inside an element that was created based on an attribute inside the tag.	element.id	
week 2	capstone	Linter	A linter detects minor and major issues with code to help remove them. Like a lint brush removing snarls from cloth.	w3c validators for html and css	can be run online, or in IDE(vscode), or at the command line.
week 3	javascript	A Program	A script, code, or executable file. An App(application).	Excel.exe, main.js or main.py	
week 3	javascript	A Special Purpose Programming Language	Can be used for or specializes in just one thing.	HTML or CSS can be used for just structure or styling.	
week 3	javascript	A General Purpose Programming Language	Can be used for virtually anything		
week 3	javascript	interpreter	executed source code one at the last minute		
week 3	javascript	compiler	converts source code into machine language for the CPU		
week 3	javascript	statement	a single "line" of code	x = 123	can be split into seperate lines for clarity.
week 3	javascript	variable	a labeled value	x	column, field, cell, label, identifier, constant, key/value pair.
week 3	javascript	declaration	assigning a value to a variable	let x = 123;	= assignment operator
week 3	javascript	operator	symbols, especially math symbols	c = a + b	+-*/ (plus, minus, multiply, divide)
week 3	javascript	value	what a variable contains, what an identifier points to.		
week 3	javascript	comment	a note to self that is ignored and not treated as code to execute	//single line comment /*multiline comment */	
week 3	javascript	data type	a kind of value. shape each kind takes in memory.	Number, String, Date, Boolean	
week 3	javascript	run	execute code		
week 3	javascript	debug	run with breakpoints to help find bugs by slowing execution and making temporary values visible.		
week 3	javascript	extension	a vscode plugin that adds new functionality to the editor/IDE		
week 3	javascript	line terminator	character that goes at the end of a statement like the semicolon ;		
week 3	javascript	expression	calculated part of a statement; often in parentheses		
week 3	javascript	=	assignment operator		
week 3	javascript				
week 4	javascript	function	block of code that can be repeated and called by name	function area(h,w){return h*w;}	some functions are anonymous (have no name/identifier) and are instead called immediately or when a specific event occurs.
week 4	javascript	call/invoke	the code that use/enters a function is the caller	console.log(area(10,20));	
week 4	javascript	arguments	the values passed by the caller to the function	console.log(area(10,20));	
week 4	javascript	parameters	the named values received into the function	function area(h,w){return h*w;}	
week 4	javascript	return value	the result of the function that is sent back to the caller	function area(h,w){return h*w;}	
week 4	javascript	element	an object created in the browser	e = document.getElementById("name")	usually created by interpreting an html tag
week 4	javascript	event	something that happens that can trigger functions without an explicit call	e.addEventListener("click", onClick);	
week 4	javascript	click	the name of the event that fires when an html element is clicked	e.addEventListener("click", onClick);	
week 4	javascript	listener	the function that is wired to respond to an event	e.addEventListener("click", onClick);	
week 4	javascript	value	the property of an html input used to store and retrieve a value	const quantity = e.value;	
week 4	javascript	functional programming	treating functions as values (just another data type)		
week 4	javascript	callback function	a function that is called when another process is complete		
week 4	javascript	Date object	a data type for holding date and time values that has many methods		
week 4	javascript	String object	a data type for holding a list of characters (letter, numbers, symbols, or spaces)		
week 5	javascript	object	a dictionary of key "words" and their associated values (includes functions) looked up by key	let person = {name:"Kevin",age:57};	
week 5	javascript	array	a list of ordered values that can be accessed by index/offset (distance from the first)	let fruit = ["apple","banana","cherry"];	
week 5	javascript	literal	creating something immediately inline using punctuation like [] or {} instead of a function.	see above	
week 5	javascript	push	expand an array by adding a value to it		
week 5	javascript	nested	one inside the other like a nested loop for rows and columns		
week 5	javascript	loop	a code path that circles back up to the top of its block	instead of flowing straight down like normal	
week 5	javascript	while	simplest loop		
week 5	javascript	for	compact versatile loop		
week 5	javascript	of	pull one value at a time out of an Array	for(value of arrayList){console.log(value)}	
week 5	javascript	in	pull one key at a time out of an Object	for(key in thisObject){console.log(thisObject,thisObject[key]}	
week 5	javascript	iteration	a single pass through a loop		
week 5	javascript	iterable	can be loop through one at a time		
week 5	javascript	createElement()	create a new html element for the document	document.createElement("div")	
week 5	javascript	appendChild()	put one html element object inside another element	parentElement.appendChild(childElement)	
week 5	javascript	sprite	a small image that can move around the screen like a fairy	https://en.wikipedia.org/wiki/Sprite_%28computer_graphics%29	
week 5	javascript	select	drop-down list	<select id="list">...options...</select>	
week 5	javascript	option	a selectable item in a drop-down-list	<option value="code">Visible Content</option>	
week 5	javascript	hierarchy	a tree like structure with parents and children	html page has a hierarchy. JavaScript data structure.	
week 5	javascript	dropdown, listbox	old terms for a select	<select id="list">...options...</select>	
week 5	javascript	ui	User Interface (what we see and touch) GUI Graphical i.e. Pixel		
week 5	javascript	pixel	a dot or square on the screen. the smallest unit we can see.		
week 6	javascript	element	an item in a array/list of items		
week 6	javascript	forEach	apply to each element in an array of items		
week 6	javascript	find	find an element in an array		
week 6	javascript	findIndex	find position of an element in an array		
week 6	javascript	filter	return only elements for which an expression is true		
week 6	javascript	map	transform array of elements		
week 6	javascript	reduce	boil down an array/list into a single return value like a total or an average, min or max		
week 6	javascript				
week 6	javascript	DOM	document object model	document.getElementById(), document.querySelectorAll()	
week 6	javascript	BOM	browser object model	window.location, window.navigator	
week 6	javascript	subscript	an element representing an items position in an array	let oldest = kids[0]	
week 6	javascript	node	an HTML element in a hierarchy	an element in an array or a parent or child	
					
week 8	Algorithms	algorithm	a specific way of solving a general problem	each with its own performance characteristics like how long it takes, or how much memory it consumes	
		kata	a form of practice		
		tests	code that proves other code works or not		
		traversing	traveling over	like linked list or a tree	
week 9	AJAX pt1	AJAX	technique of using background requests - Asynchronous JavaScript and XML/JSON/ETC	XMLHTTPRequest() now called fetch()	old name for doing fetch()
		API	Application Programmers Interface - an easy set of functions to call for front end programmers to make their life simple		
		Application Programmer	A Front End Engineer focused on user interface design not backend technology like sql databases		
		Front End Engineer	Client (BRowser) USer interface Programmer (an application programmer)- focused on user interface design not backend technology lat sql databases		
		Back End Engineer	Server (Web/Database) WEB/API Programmer	PHP/PYTHON/JAVA/JAVASCRIPT + SQL	
		interface	how things connect		
		protocol	agreement on the shape and meaning of information sent and received	like flags on a ship, like which language to speak	
		HTTP	THe web protocol (HyperText Transport Protocol)	scheme in the url e.g HTTPS://	
		REST	REpresentational State Transfer - technique of using meaningful URLs and HTTP verbs	POST, GET, PATCH, DELETE; Using HTTP Verbs and URLs MEANINGFULLY	
		HTTP VERBS	CRUD: GET/POST/PUT/DELETE and also others like PATCH	Create, Read, Update, Delete	
		SQL 	Language for databases. Structured Query Language.	Insert, Select, Update, Delete	
		endpoint/resource	URL/URI path to the data we want to use	/api/v1/products/	
		api-key	a personal id "number"		
		throttle	rate-limit accesses per day for a given api-key		
		XML	store complex hierarchical data in a string or file  eXtensible Markup Language - Data <><></></>	validated  - looks like graphics, SVG, XHTML, SGML	
		JSON	store complex hierarchical data in a string or file [{"":""}]	also validated? looks like code	
		XMLHttpRequest()	background http requests for javascript old school - used call back functions instead of async		
		fetch()	modern background requests for javascript		
		async	many things all at the same time (parallel)		
		promise	a delayed or deferred response to support asynchronous(parallel rather than single threaded)		
		await	a way to turn off async so promises don't make us crazy		
					
	USER	HTTP METHODS/VERBS	DATABASE SQL 		
	Create	POST	INSERT		
	Read	GET	SELECT		
	Update	PUT	UPDATE		
	Delete	DELETE	DELETE		
					
		flag	A boolean (true/false) option that is turned on by the presence/existence of it. -a -l or readonly in html attributes		
					
week 11	Databases	Database	Both a place to store structured data on disk efficiently and a way to search and filter that data quickly to provide answers.		
week 11	Databases	RDBMS	Relational Database Management System	mysql, oracle, ibm db2, microsoft sql server	
week 11	Databases	NO-SQL	Any database that is not "relational"	mongodb	
week 11	SQL	Relation	The association between two tables e.g. Customers and Orders		
week 11	SQL	Table	The fundamental unit of information in a database. A type or category, or class of information.	Customers	
week 11	SQL	query	test/string of sql code we send to the database to get a record set response.		
week 11	SQL	SELECT	which fields to calculate or display		
week 11	SQL	FROM tablename	which table to draw information from		
week 11	SQL	WHERE	filter records to be included by field value		
week 11	SQL	JOIN	add associated secondary table to draw fields from		
week 11	SQL	ON	how to associate one table with another using their foreign keys		
week 11	SQL	DDL	Data Description Language for defining Schemas		
week 11	SQL	schema	A database. A collection of tables that together form the structure for 		
week 11	SQL	GROUP BY	combines input records into aggregates such as SUM() AVG() COUNT()		
week 11	SQL	HAVING	filters by output aggregate function e.g. SUM() AVG() COUNT()		